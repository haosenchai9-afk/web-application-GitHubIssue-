# .github/workflows/issue-management.yml（目标仓库web-application的main分支下）
name: Issue Management Automation
on:
  issues:
    types: [opened, edited]  # Issue创建/编辑时触发
  issue_comment:
    types: [created]  # 评论创建时触发

jobs:
  auto-label-issue:
    runs-on: ubuntu-latest
    steps:
      - name: 为Bug类型Issue加标签
        if: contains(github.event.issue.title, 'Bug: ')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['bug', 'priority-high', 'status-open']
            })
            # 关联里程碑v2.1.0
            github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              milestone: 1  # 需替换为仓库中"v2.1.0"里程碑的实际ID（在里程碑页面查看）
            })
            # 自动添加评论
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "Bug reproduction steps required: Please provide detailed steps to reproduce this login failure."
            })

      - name: 为Epic类型Issue加标签
        if: contains(github.event.issue.title, 'Epic: ')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['epic', 'priority-medium', 'status-in-progress']
            })
            # 关联里程碑v2.2.0
            github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              milestone: 2  # 需替换为仓库中"v2.2.0"里程碑的实际ID
            })
            # 自动添加评论
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "Epic scope approved by PM: This epic includes user profile creation, editing, and deletion."
            })

      - name: 为维护类型Issue加标签
        if: contains(github.event.issue.title, 'Maintenance: ')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['maintenance', 'priority-low', 'status-scheduled']
            })
            # 维护类Issue无里程碑，仅添加评论
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "Maintenance window: every Sunday 2-4 AM (no service impact)."
            })
